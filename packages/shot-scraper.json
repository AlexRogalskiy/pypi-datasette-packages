{
  "info": {
    "author": "Simon Willison",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# shot-scraper\n\n[![PyPI](https://img.shields.io/pypi/v/shot-scraper.svg)](https://pypi.org/project/shot-scraper/)\n[![Changelog](https://img.shields.io/github/v/release/simonw/shot-scraper?include_prereleases&label=changelog)](https://github.com/simonw/shot-scraper/releases)\n[![Tests](https://github.com/simonw/shot-scraper/workflows/Test/badge.svg)](https://github.com/simonw/shot-scraper/actions?query=workflow%3ATest)\n[![License](https://img.shields.io/badge/license-Apache%202.0-blue.svg)](https://github.com/simonw/shot-scraper/blob/master/LICENSE)\n\nTools for taking automated screenshots of websites\n\nFor background on this project see [shot-scraper: automated screenshots for documentation, built on Playwright](https://simonwillison.net/2022/Mar/10/shot-scraper/).\n\n## Quickstart\n\nTo get started without installing any software, use the [shot-scraper-template](https://github.com/simonw/shot-scraper-template) template to create your own GitHub repository which takes screenshots of a page using `shot-scraper`. See [Instantly create a GitHub repository to take screenshots of a web page](https://simonwillison.net/2022/Mar/14/shot-scraper-template/) for details.\n\n## Demos\n\n- The [shot-scraper-demo](https://github.com/simonw/shot-scraper-demo) repository uses this tool to capture recently spotted owls in El Granada, CA according to [this page](https://www.owlsnearme.com/?place=127871), and to  generate an annotated screenshot illustrating a Datasette feature as described [in my blog](https://simonwillison.net/2022/Mar/10/shot-scraper/#a-complex-example).\n- Ben Welsh built [@newshomepages](https://twitter.com/newshomepages), a Twitter bot that uses `shot-scraper` and GitHub Actions to take screenshots of news website homepages and publish them to Twitter. The code for that lives in [palewire/news-homepages](https://github.com/palewire/news-homepages).\n- [scrape-hacker-news-by-domain](https://github.com/simonw/scrape-hacker-news-by-domain) uses `shot-scraper javascript` to scrape a web page. See [Scraping web pages from the command-line with shot-scraper](https://simonwillison.net/2022/Mar/14/scraping-web-pages-shot-scraper/) for details of how this works.\n\n## Installation\n\nInstall this tool using `pip`:\n\n    pip install shot-scraper\n\nThis tool depends on Playwright, which first needs to install its own dedicated Chromium browser.\n\nRun `shot-scraper install` once to install that:\n```\n% shot-scraper install\nDownloading Playwright build of chromium v965416 - 117.2 Mb [====================] 100% 0.0s \nPlaywright build of chromium v965416 downloaded to /Users/simon/Library/Caches/ms-playwright/chromium-965416\nDownloading Playwright build of ffmpeg v1007 - 1.1 Mb [====================] 100% 0.0s \nPlaywright build of ffmpeg v1007 downloaded to /Users/simon/Library/Caches/ms-playwright/ffmpeg-1007\n```\nIf you want to use other browsers such as Firefox you should install those too:\n```\n% shot-scraper install -b firefox\n```\nFull `--help` for the `shot-scraper install` command:\n<!-- [[[cog\nimport cog\nfrom shot_scraper import cli\nfrom click.testing import CliRunner\nrunner = CliRunner()\nresult = runner.invoke(cli.cli, [\"install\", \"--help\"])\nhelp = result.output.replace(\"Usage: cli\", \"Usage: shot-scraper\")\ncog.out(\n    \"```\\n{}\\n```\\n\".format(help.strip())\n)\n]]] -->\n```\nUsage: shot-scraper install [OPTIONS]\n\n  Install the Playwright browser needed by this tool.\n\n  Usage:\n\n      shot-scraper install\n\n  Or for browsers other than the Chromium default:\n\n      shot-scraper install -b firefox\n\nOptions:\n  -b, --browser [chromium|firefox|chrome|chrome-beta]\n                                  Which browser to install\n  -h, --help                      Show this message and exit.\n```\n<!-- [[[end]]] -->\n## Taking a screenshot\n\nTo take a screenshot of a web page and write it to `datasette-io.png` run this:\n\n    shot-scraper https://datasette.io/\n\nIf a file called `datasette-io.png` already exists the filename `datasette-io.1.png` will be used instead.\n\nYou can use the `-o` option to specify a filename:\n\n    shot-scraper https://datasette.io/ -o datasette.png\n\nUse `-o -` to write the PNG image to standard output:\n\n    shot-scraper https://datasette.io/ -o - > datasette.png\n\nIf you omit the protocol `http://` will be added automatically, and any redirects will be followed:\n\n    shot-scraper datasette.io -o datasette.png\n\n### Adjusting the browser width and height\n\nThe browser window used to take the screenshots defaults to 1280px wide and 780px tall.\n\nYou can adjust these with the `--width` and `--height` options:\n\n    shot-scraper https://datasette.io/ -o small.png --width 400 --height 800\n\nIf you provide both options, the resulting screenshot will be of that size. If you omit `--height` a full page length screenshot will be produced (the default).\n\n### Screenshotting a specific area with CSS selectors\n\nTo take a screenshot of a specific element on the page, use `--selector` or `-s` with its CSS selector:\n\n    shot-scraper https://simonwillison.net/ -s '#bighead'\n\nWhen using `--selector` the height and width, if provided, will set the size of the browser window when the page is loaded but the resulting screenshot will still be the same dimensions as the element on the page.\n\nYou can pass `--selector` multiple times. The resulting screenshot will cover the smallest area of the page that contains all of the elements you specified, for example:\n\n    shot-scraper https://simonwillison.net/ \\\n      -s '#bighead' -s .overband \\\n      -o bighead-multi-selector.png\n\nYou can add `--padding 20` to add 20px of padding around the elements when the shot is taken.\n\n### Adding a delay\n\nSometimes a page will not have completely loaded before a screenshot is taken. You can use `--wait X` to wait the specified number of milliseconds after the page load event has fired before taking the screenshot:\n\n    shot-scraper https://simonwillison.net/ --wait 2000\n\n### Executing custom JavaScript\n\nYou can use custom JavaScript to modify the page after it has loaded (after the 'onload' event has fired) but before the screenshot is taken using the `--javascript` option:\n\n    shot-scraper https://simonwillison.net/ \\\n      -o simonwillison-pink.png \\\n      --javascript \"document.body.style.backgroundColor = 'pink';\"\n\n### Using JPEGs instead of PNGs\n\nScreenshots default to PNG. You can save as a JPEG by specifying a `-o` filename that ends with `.jpg`.\n\nYou can also use `--quality X` to save as a JPEG with the specified quality, in order to reduce the filesize. 80 is a good value to use here:\n\n    shot-scraper https://simonwillison.net/ \\\n      -h 800 -o simonwillison.jpg --quality 80\n    % ls -lah simonwillison.jpg\n    -rw-r--r--@ 1 simon  staff   168K Mar  9 13:53 simonwillison.jpg\n\n### Retina images\n\nThe `--retina` option sets a device scale factor of 2. This means that an image will have its resolution effectively doubled, emulating the display of images on [retina](https://en.wikipedia.org/wiki/Retina_display) or higher pixel density screens.\n\n    shot-scraper https://simonwillison.net/ -o simon.png \\\n      --width 400 --height 600 --retina\n\nThis example will produce an image that is 800px wide and 1200px high.\n\n### Interacting with the page\n\nSometimes it's useful to be able to manually interact with a page before the screenshot is captured.\n\nAdd the `--interactive` option to open a browser window that you can interact with. Then hit `<enter>` in the terminal when you are ready to take the shot and close the window.\n\n    shot-scraper https://simonwillison.net/ -o after-interaction.png \\\n      --height 800 --interactive\n\nThis will output:\n\n    Hit <enter> to take the shot and close the browser window:\n      # And after you hit <enter>...\n    Screenshot of 'https://simonwillison.net/' written to 'after-interaction.png'\n\n### Taking screenshots of local HTML files\n\nYou can pass the path to an HTML file on disk to take a screenshot of that rendered file:\n\n    shot-scraper index.html -o index.png\n\nCSS and images referenced from that file using relative paths will also be included.\n\n### shot-scraper shot --help\n\nFull `--help` for this command:\n\n<!-- [[[cog\nresult = runner.invoke(cli.cli, [\"shot\", \"--help\"])\nhelp = result.output.replace(\"Usage: cli\", \"Usage: shot-scraper\")\ncog.out(\n    \"```\\n{}\\n```\\n\".format(help.strip())\n)\n]]] -->\n```\nUsage: shot-scraper shot [OPTIONS] URL\n\n  Take a single screenshot of a page or portion of a page.\n\n  Usage:\n\n      shot-scraper www.example.com\n\n  This will write the screenshot to www-example-com.png\n\n  Use \"-o\" to write to a specific file:\n\n      shot-scraper https://www.example.com/ -o example.png\n\n  You can also pass a path to a local file on disk:\n\n      shot-scraper index.html -o index.png\n\n  Using \"-o -\" will output to standard out:\n\n      shot-scraper https://www.example.com/ -o - > example.png\n\n  Use -s to take a screenshot of one area of the page, identified using one or\n  more CSS selectors:\n\n      shot-scraper https://simonwillison.net -s '#bighead'\n\nOptions:\n  -a, --auth FILENAME             Path to JSON authentication context file\n  -w, --width INTEGER             Width of browser window, defaults to 1280\n  -h, --height INTEGER            Height of browser window and shot - defaults\n                                  to the full height of the page\n  -o, --output FILE\n  -s, --selector TEXT             Take shot of first element matching this CSS\n                                  selector\n  -p, --padding INTEGER           When using selectors, add this much padding in\n                                  pixels\n  -j, --javascript TEXT           Execute this JS prior to taking the shot\n  --retina                        Use device scale factor of 2\n  --quality INTEGER               Save as JPEG with this quality, e.g. 80\n  --wait INTEGER                  Wait this many milliseconds before taking the\n                                  screenshot\n  --timeout INTEGER               Wait this many milliseconds before failing\n  -i, --interactive               Interact with the page in a browser before\n                                  taking the shot\n  --devtools                      Interact mode with developer tools\n  -b, --browser [chromium|firefox|chrome|chrome-beta]\n                                  Which browser to use\n  --reduced-motion                Emulate 'prefers-reduced-motion' media feature\n  --help                          Show this message and exit.\n```\n<!-- [[[end]]] -->\n\n## Websites that need authentication\n\nIf you want to take screenshots of a site that has some form of authentication, you will first need to authenticate with that website manually.\n\nYou can do that using the `shot-scraper auth` command:\n\n    shot-scraper auth https://datasette-auth-passwords-demo.datasette.io/-/login auth.json\n\n(For this demo, use username = `root` and password = `password!`)\n\nThis will open a browser window on your computer showing the page you specified.\n\nYou can then sign in using that browser window - including 2FA or CAPTCHAs or other more complex form of authentication.\n\nWhen you are finished, hit `<enter>` at the `shot-scraper` command-line prompt. The browser will close and the authentication credentials (usually cookies) for that browser session will be written out to the `auth.json` file.\n\nTo take authenticated screenshots you can then use the `-a` or `--auth` options to point to the JSON file that you created:\n\n    shot-scraper https://datasette-auth-passwords-demo.datasette.io/ \\\n      -a auth.json -o authed.png\n\nFull `--help` for `shot-scraper auth`:\n\n<!-- [[[cog\nresult = runner.invoke(cli.cli, [\"auth\", \"--help\"])\nhelp = result.output.replace(\"Usage: cli\", \"Usage: shot-scraper\")\ncog.out(\n    \"```\\n{}\\n```\\n\".format(help.strip())\n)\n]]] -->\n```\nUsage: shot-scraper auth [OPTIONS] URL CONTEXT_FILE\n\n  Open a browser so user can manually authenticate with the specified site, then\n  save the resulting authentication context to a file.\n\n  Usage:\n\n      shot-scraper auth https://github.com/ auth.json\n\nOptions:\n  -b, --browser [chromium|firefox|chrome|chrome-beta]\n                                  Which browser to use\n  -h, --help                      Show this message and exit.\n```\n<!-- [[[end]]] -->\n\n## Taking multiple screenshots\n\nYou can configure multiple screenshots using a YAML file. Create a file called `shots.yml` that looks like this:\n\n```yaml\n- output: example.com.png\n  url: http://www.example.com/\n- output: w3c.org.png\n  url: https://www.w3.org/\n```\nThen run the tool like so:\n\n    shot-scraper multi shots.yml\n\nThis will create two image files, `www-example-com.png` and `w3c.org.png`, containing screenshots of those two URLs.\n\nYou can set `url:` to a path to a file on disk as well:\n\n```yaml\n- output: index.png\n  url: index.html\n```\n\nUse `--retina` to take all screenshots at retina resolution instead, doubling the dimensions of the files:\n\n    shot-scraper multi shots.yml --retina\n\nUse `--fail-on-error` to fail noisily on error (may be helpful in CI):\n\n    shot-scraper multi shots.yml --fail-on-error\n\n\nTo take a screenshot of just the area of a page defined by a CSS selector, add `selector` to the YAML block:\n\n```yaml\n- output: bighead.png\n  url: https://simonwillison.net/\n  selector: \"#bighead\"\n```\n\nYou can pass more than one selector using a `selectors:` list. You can also use `padding:` to specify additional padding:\n```yaml\n- output: bighead-multi-selector.png\n  url: https://simonwillison.net/\n  selectors:\n  - \"#bighead\"\n  - .overband\n  padding: 20\n```\nTo execute JavaScript after the page has loaded but before the screenshot is taken, add a `javascript` key:\n```yaml\n- output: bighead-pink.png\n  url: https://simonwillison.net/\n  selector: \"#bighead\"\n  javascript: |\n    document.body.style.backgroundColor = 'pink'\n```\n\nYou can include desired `height`, `width`, `quality` and `wait` options on each item as well:\n\n```yaml\n- output: simon-narrow.jpg\n  url: https://simonwillison.net/\n  width: 400\n  height: 800\n  quality: 80\n  wait: 500\n```\n\nFull `--help` for this command:\n\n<!-- [[[cog\nresult = runner.invoke(cli.cli, [\"multi\", \"--help\"])\nhelp = result.output.replace(\"Usage: cli\", \"Usage: shot-scraper\")\ncog.out(\n    \"```\\n{}\\n```\\n\".format(help.strip())\n)\n]]] -->\n```\nUsage: shot-scraper multi [OPTIONS] CONFIG\n\n  Take multiple screenshots, defined by a YAML file\n\n  Usage:\n\n      shot-scraper multi config.yml\n\n  Where config.yml contains configuration like this:\n\n      - output: example.png\n        url: http://www.example.com/\n\nOptions:\n  -a, --auth FILENAME             Path to JSON authentication context file\n  --retina                        Use device scale factor of 2\n  --timeout INTEGER               Wait this many milliseconds before failing\n  --fail-on-error                 Fail noisily on error\n  -b, --browser [chromium|firefox|chrome|chrome-beta]\n                                  Which browser to use\n  --reduced-motion                Emulate 'prefers-reduced-motion' media feature\n  -h, --help                      Show this message and exit.\n```\n<!-- [[[end]]] -->\n\n## Saving a web page to PDF\n\nThe `shot-scraper pdf` command saves a PDF version of a web page - the equivalent of using `Print -> Save to PDF` in Chromium.\n\n    shot-scraper pdf https://datasette.io/\n\nThis will save to `datasette-io.pdf`. You can use `-o` to specify a filename:\n\n    shot-scraper pdf https://datasette.io/tutorials/learn-sql \\\n      -o learn-sql.pdf\n\nFull `--help` for this command:\n\n<!-- [[[cog\nresult = runner.invoke(cli.cli, [\"pdf\", \"--help\"])\nhelp = result.output.replace(\"Usage: cli\", \"Usage: shot-scraper\")\ncog.out(\n    \"```\\n{}\\n```\\n\".format(help.strip())\n)\n]]] -->\n```\nUsage: shot-scraper pdf [OPTIONS] URL\n\n  Create a PDF of the specified page\n\n  Usage:\n\n      shot-scraper pdf https://datasette.io/\n\n  Use -o to specify a filename:\n\n      shot-scraper pdf https://datasette.io/ -o datasette.pdf\n\nOptions:\n  -a, --auth FILENAME    Path to JSON authentication context file\n  -o, --output FILE\n  -j, --javascript TEXT  Execute this JS prior to creating the PDF\n  --wait INTEGER         Wait this many milliseconds before taking the\n                         screenshot\n  --media-screen         Use screen rather than print styles\n  --landscape            Use landscape orientation\n  -h, --help             Show this message and exit.\n```\n<!-- [[[end]]] -->\n\n## Scraping pages using JavaScript\n\nThe `shot-scraper javascript` command can be used to execute JavaScript directly against a page and return the result as JSON.\n\nThis command doesn't produce a screenshot, but has interesting applications for scraping.\n\nTo retrieve a string title of a document:\n\n    shot-scraper javascript https://datasette.io/ \"document.title\"\n\nThis returns a JSON string:\n```json\n\"Datasette: An open source multi-tool for exploring and publishing data\"\n```\nTo return a JSON object, wrap an object literal in parenthesis:\n\n    shot-scraper javascript https://datasette.io/ \"({\n      title: document.title,\n      tagline: document.querySelector('.tagline').innerText\n    })\"\n\nThis returns:\n```json\n{\n  \"title\": \"Datasette: An open source multi-tool for exploring and publishing data\",\n  \"tagline\": \"An open source multi-tool for exploring and publishing data\"\n}\n```\n\nYou can pass an `async` function if you want to use `await`, including to import modules from external URLs. This example loads the [Readability.js](https://github.com/mozilla/readability) library from [Skypack](https://www.skypack.dev/) and uses it to extract the core content of a page:\n\n```\nshot-scraper javascript https://simonwillison.net/2022/Mar/14/scraping-web-pages-shot-scraper/ \"\nasync () => {\n  const readability = await import('https://cdn.skypack.dev/@mozilla/readability');\n  return (new readability.Readability(document)).parse();\n}\"\n```\n\nTo use functions such as `setInterval()`, for example if you need to delay the shot for a second to allow an animation to finish running, return a promise:\n\n    shot-scraper javascript datasette.io \"\n    new Promise(done => setInterval(\n      () => {\n        done({\n          title: document.title,\n          tagline: document.querySelector('.tagline').innerText\n        });\n      }, 1000\n    ));\"\n\nYou can also save JavaScript to a file and execute it like this:\n\n    shot-scraper javascript datasette.io -i script.js\n\nOr read it from standard input like this:\n\n    echo \"document.title\" | shot-scraper javascript datasette.io\n\n### Handling JavaScript errors\n\nIf a JavaScript error occurs, a stack trace will be written to standard error and the tool will terminate with an exit code of 1.\n\nThis can be used to run JavaScript tests in continuous integration environments, by taking advantage of the `throw \"error message\"` JavaScript statement.\n\nThis example [uses GitHub Actions](https://docs.github.com/en/actions/quickstart):\n\n```yaml\n- name: Test page title\n  run: |-\n    shot-scraper javascript datasette.io \"\n      if (document.title != 'Datasette') {\n        throw 'Wrong title detected';\n      }\"\n```\n\nFull `--help` for this command:\n\n<!-- [[[cog\nresult = runner.invoke(cli.cli, [\"javascript\", \"--help\"])\nhelp = result.output.replace(\"Usage: cli\", \"Usage: shot-scraper\")\ncog.out(\n    \"```\\n{}\\n```\\n\".format(help.strip())\n)\n]]] -->\n```\nUsage: shot-scraper javascript [OPTIONS] URL [JAVASCRIPT]\n\n  Execute JavaScript against the page and return the result as JSON\n\n  Usage:\n\n      shot-scraper javascript https://datasette.io/ \"document.title\"\n\n  To return a JSON object, use this:\n\n      \"({title: document.title, location: document.location})\"\n\n  To use setInterval() or similar, pass a promise:\n\n      \"new Promise(done => setInterval(\n        () => {\n          done({\n            title: document.title,\n            h2: document.querySelector('h2').innerHTML\n          });\n        }, 1000\n      ));\"\n\n  If a JavaScript error occurs an exit code of 1 will be returned.\n\nOptions:\n  -i, --input FILENAME            Read input JavaScript from this file\n  -a, --auth FILENAME             Path to JSON authentication context file\n  -o, --output FILENAME           Save output JSON to this file\n  -b, --browser [chromium|firefox|chrome|chrome-beta]\n                                  Which browser to use\n  --reduced-motion                Emulate 'prefers-reduced-motion' media feature\n  -h, --help                      Show this message and exit.\n```\n<!-- [[[end]]] -->\n\n\n## Dumping out an accessibility tree\n\nThe `shot-scraper accessibility` command dumps out the Chromium accessibility tree for the provided URL, as JSON:\n\n    shot-scraper accessibility https://datasette.io/\n\nUse `-o filename.json` to write the output to a file instead of displaying it.\n\nAdd `--javascript SCRIPT` to execute custom JavaScript before taking the snapshot.\n\nFull `--help` for this command:\n\n<!-- [[[cog\nresult = runner.invoke(cli.cli, [\"accessibility\", \"--help\"])\nhelp = result.output.replace(\"Usage: cli\", \"Usage: shot-scraper\")\ncog.out(\n    \"```\\n{}\\n```\\n\".format(help.strip())\n)\n]]] -->\n```\nUsage: shot-scraper accessibility [OPTIONS] URL\n\n  Dump the Chromium accessibility tree for the specifed page\n\n  Usage:\n\n      shot-scraper accessibility https://datasette.io/\n\nOptions:\n  -a, --auth FILENAME    Path to JSON authentication context file\n  -o, --output FILENAME\n  -j, --javascript TEXT  Execute this JS prior to taking the snapshot\n  --timeout INTEGER      Wait this many milliseconds before failing\n  -h, --help             Show this message and exit.\n```\n<!-- [[[end]]] -->\n\n## Tips for executing JavaScript\n\nIf you are using the `--javascript` option to execute code, that code will be executed after the page load event has fired but before the screenshot is taken.\n\nYou can use that code to do things like hide or remove specific page elements, click on links to open menus, or even add annotations to the page such as this [pink arrow example](https://simonwillison.net/2022/Mar/10/shot-scraper/#a-complex-example).\n\nThis code hides any element with a `[data-ad-rendered]` attribute and the element with `id=\"ensNotifyBanner\"`:\n\n    document.querySelectorAll(\n        '[data-ad-rendered],#ensNotifyBanner'\n    ).forEach(el => el.style.display = 'none')\n\nYou can execute that like so:\n\n```\nshot-scraper https://www.latimes.com/ -o latimes.png --javascript \"\ndocument.querySelectorAll(\n    '[data-ad-rendered],#ensNotifyBanner'\n).forEach(el => el.style.display = 'none')\n\"\n```\n\nIn some cases you may need to add a pause that executes during your custom JavaScript before the screenshot is taken - for example if you click on a button that triggers a short fading animation.\n\nYou can do that using the following pattern:\n```javascript\nnew Promise(takeShot => {\n  // Your code goes here\n  // ...\n  setTimeout(() => {\n    // Resolving the promise takes the shot\n    takeShot();\n  }, 1000);\n});\n```\nIf your custom code defines a `Promise`, `shot-scraper` will wait for that promise to complete before taking the screenshot. Here the screenshot does not occur until the `takeShot()` function is called.\n\n## Development\n\nTo contribute to this tool, first checkout the code. Then create a new virtual environment:\n\n    cd shot-scraper\n    python -m venv venv\n    source venv/bin/activate\n\nOr if you are using `pipenv`:\n\n    pipenv shell\n\nNow install the dependencies and test dependencies:\n\n    pip install -e '.[test]'\n\nTo run the tests:\n\n    pytest\n\nSome of the tests exercise the CLI utility directly. Run those like so:\n\n    tests/run_examples.sh\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/simonw/shot-scraper",
    "keywords": "",
    "license": "Apache License, Version 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "shot-scraper",
    "package_url": "https://pypi.org/project/shot-scraper/",
    "platform": null,
    "project_url": "https://pypi.org/project/shot-scraper/",
    "project_urls": {
      "CI": "https://github.com/simonw/shot-scraper/actions",
      "Changelog": "https://github.com/simonw/shot-scraper/releases",
      "Homepage": "https://github.com/simonw/shot-scraper",
      "Issues": "https://github.com/simonw/shot-scraper/issues"
    },
    "release_url": "https://pypi.org/project/shot-scraper/0.11/",
    "requires_dist": [
      "click",
      "PyYAML",
      "playwright",
      "click-default-group",
      "pytest ; extra == 'test'",
      "cogapp ; extra == 'test'"
    ],
    "requires_python": ">=3.7",
    "summary": "Tools for taking automated screenshots of websites",
    "version": "0.11",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13457709,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "md5": "4ab3e61246fcfde626704272b05c932f",
          "sha256": "ab08db0453190fe10f9fd743e2cc708a0b7296198ac55e65316d25e3d8f53ba7"
        },
        "downloads": -1,
        "filename": "shot_scraper-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4ab3e61246fcfde626704272b05c932f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 7935,
        "upload_time": "2022-03-09T19:29:03",
        "upload_time_iso_8601": "2022-03-09T19:29:03.983535Z",
        "url": "https://files.pythonhosted.org/packages/fa/93/2daac2824283053c06c5c5945cd7a94c466a6cc6ed5447b5ee9c1f037ad4/shot_scraper-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "a9c7ca989d276e9898448cc24ce0a23f",
          "sha256": "45f492938b9c266a14770a5964b5b0c7c8baed8b4bdc347712e024262807161b"
        },
        "downloads": -1,
        "filename": "shot-scraper-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a9c7ca989d276e9898448cc24ce0a23f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 7393,
        "upload_time": "2022-03-09T19:29:05",
        "upload_time_iso_8601": "2022-03-09T19:29:05.825168Z",
        "url": "https://files.pythonhosted.org/packages/09/8b/d02f3031f10e0b18f4087c44d34733414c57573aa14e07dbd7967d2d9ef2/shot-scraper-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.10": [
      {
        "comment_text": "",
        "digests": {
          "md5": "e4b7d298c64ef9d8604490f43db99a82",
          "sha256": "bc135c65e3d16930f5014a05added8e275f8fb87a8c778a0c18ad14388f885a0"
        },
        "downloads": -1,
        "filename": "shot_scraper-0.10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e4b7d298c64ef9d8604490f43db99a82",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 17786,
        "upload_time": "2022-03-29T00:27:19",
        "upload_time_iso_8601": "2022-03-29T00:27:19.624355Z",
        "url": "https://files.pythonhosted.org/packages/2e/61/6607c428831e669775ef9d7ce34e9f2ab2f140832d93946c57a03bcefa2b/shot_scraper-0.10-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "fe2b29c359aa2ce7bd8930aff6e21256",
          "sha256": "7819254ecef0e2a0ea4c259d6c46332d20f0267177277e371a14f8fa872df01d"
        },
        "downloads": -1,
        "filename": "shot-scraper-0.10.tar.gz",
        "has_sig": false,
        "md5_digest": "fe2b29c359aa2ce7bd8930aff6e21256",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 22170,
        "upload_time": "2022-03-29T00:27:20",
        "upload_time_iso_8601": "2022-03-29T00:27:20.735651Z",
        "url": "https://files.pythonhosted.org/packages/d8/24/0e35ca1d708f6d1cdf987a0410249adb53cba4d3c5ce85fe4a29732da147/shot-scraper-0.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.11": [
      {
        "comment_text": "",
        "digests": {
          "md5": "5f0bacb2133101362e74bbeb9140d364",
          "sha256": "84bb16065b4f954f366d939183680b92b81f9140be28a0df2000895c0b9d4d0f"
        },
        "downloads": -1,
        "filename": "shot_scraper-0.11-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5f0bacb2133101362e74bbeb9140d364",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 18049,
        "upload_time": "2022-04-08T20:11:49",
        "upload_time_iso_8601": "2022-04-08T20:11:49.823389Z",
        "url": "https://files.pythonhosted.org/packages/8a/0a/25bd6e00705e8bca4e02402dba93f43424194953daed48e1c43bfb03a360/shot_scraper-0.11-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "a0fe09add448524867e4c2f30f22abcd",
          "sha256": "01692606b2ee205745f2974d7a4121700797eed60e8d48722f88ab6a1910b058"
        },
        "downloads": -1,
        "filename": "shot-scraper-0.11.tar.gz",
        "has_sig": false,
        "md5_digest": "a0fe09add448524867e4c2f30f22abcd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 22719,
        "upload_time": "2022-04-08T20:11:51",
        "upload_time_iso_8601": "2022-04-08T20:11:51.171275Z",
        "url": "https://files.pythonhosted.org/packages/68/9c/565273ca03f789294e6efc7f298a73f381d430feb6518d4e8e747f2e4e38/shot-scraper-0.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1a0": [
      {
        "comment_text": "",
        "digests": {
          "md5": "5b1500bde6d76b5725ceb2938b7a2d32",
          "sha256": "d6f1130b78a93280730d7e67ac4483666cc135cfc467f2b8160769ade7e16aa0"
        },
        "downloads": -1,
        "filename": "shot_scraper-0.1a0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5b1500bde6d76b5725ceb2938b7a2d32",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7235,
        "upload_time": "2022-03-08T23:11:18",
        "upload_time_iso_8601": "2022-03-08T23:11:18.171949Z",
        "url": "https://files.pythonhosted.org/packages/4a/5f/cdfc7d959f81b5d710241025b981e1459ea926c09218d6cb68b8df7e6d77/shot_scraper-0.1a0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "bcefec0fde22ca4442bbb3fd486efaa5",
          "sha256": "392db83a74e7ec620f87f3db472e803ab2d63dabd72621986c861c9de3808ffd"
        },
        "downloads": -1,
        "filename": "shot-scraper-0.1a0.tar.gz",
        "has_sig": false,
        "md5_digest": "bcefec0fde22ca4442bbb3fd486efaa5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6615,
        "upload_time": "2022-03-08T23:11:19",
        "upload_time_iso_8601": "2022-03-08T23:11:19.812698Z",
        "url": "https://files.pythonhosted.org/packages/e8/81/ffcfa0f358f7d54778e0c4e87456da5aff837a3401d27783bc8cb162b8da/shot-scraper-0.1a0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "md5": "8e18d1d21ca4aecdf7b0bc6fd6bfb93a",
          "sha256": "5ab5eece9f5b42b55dfc67427446bd9c78e39433ff7da9a9388a8f43a859dfe9"
        },
        "downloads": -1,
        "filename": "shot_scraper-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8e18d1d21ca4aecdf7b0bc6fd6bfb93a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 9000,
        "upload_time": "2022-03-09T21:08:27",
        "upload_time_iso_8601": "2022-03-09T21:08:27.916467Z",
        "url": "https://files.pythonhosted.org/packages/b3/60/e8ce9eec3920d85a3f4013106596fbd7a2edf0ac43fc0624e27c26055444/shot_scraper-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "97ee6759824cc0c5ca98b1dd514ce2b4",
          "sha256": "f0a39bbe938e8cef1e76736132f0817d0ca24524c0f6408bf73dbf693b2f1c79"
        },
        "downloads": -1,
        "filename": "shot-scraper-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "97ee6759824cc0c5ca98b1dd514ce2b4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 8437,
        "upload_time": "2022-03-09T21:08:29",
        "upload_time_iso_8601": "2022-03-09T21:08:29.114426Z",
        "url": "https://files.pythonhosted.org/packages/4a/ea/284c0b3164fac2ef2a6693d388efd55f9bdfe5a44b0337c9c992a3488fdb/shot-scraper-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "md5": "7f7c9418153d237e87a4208741a85b06",
          "sha256": "0bbb70a4db3f271f77a026b40009213449e1ebae6709663237dc5f3312d19a2f"
        },
        "downloads": -1,
        "filename": "shot_scraper-0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7f7c9418153d237e87a4208741a85b06",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 9494,
        "upload_time": "2022-03-09T22:27:19",
        "upload_time_iso_8601": "2022-03-09T22:27:19.466532Z",
        "url": "https://files.pythonhosted.org/packages/db/32/8499a4320065c8f4de00f09619bb412ccb44c1a39f7aa68b19f20889b63a/shot_scraper-0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "6fb402d83b82551ff56a09c7d97b284b",
          "sha256": "0ff78865c1d05eb115d19e3508818570d48e333a1f3973e6ff2d5e0af52141b6"
        },
        "downloads": -1,
        "filename": "shot-scraper-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "6fb402d83b82551ff56a09c7d97b284b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 8916,
        "upload_time": "2022-03-09T22:27:20",
        "upload_time_iso_8601": "2022-03-09T22:27:20.767288Z",
        "url": "https://files.pythonhosted.org/packages/0c/e5/d1fe1e18755aeebdaa5e31462039aea0d4b6e18788fc1b19ee2e33f8e20a/shot-scraper-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "md5": "c44c9307368b746dff4cd85954685f02",
          "sha256": "ec43b5248cd7851d1b8cb6724e2da0a202671815e90061aca57c451cf50db799"
        },
        "downloads": -1,
        "filename": "shot_scraper-0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c44c9307368b746dff4cd85954685f02",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 9726,
        "upload_time": "2022-03-10T22:36:22",
        "upload_time_iso_8601": "2022-03-10T22:36:22.657968Z",
        "url": "https://files.pythonhosted.org/packages/f9/98/db9b6823243fe6ffbb7b1f2b81b5097208b74e397bdf76f6ebecca98f51c/shot_scraper-0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "fb4975446adfe0245af5f8f383c7399d",
          "sha256": "36e02d0f6afd302c52035c072157058cf8abe2cf99f0968fcd58bc61e2269fc1"
        },
        "downloads": -1,
        "filename": "shot-scraper-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "fb4975446adfe0245af5f8f383c7399d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 9131,
        "upload_time": "2022-03-10T22:36:23",
        "upload_time_iso_8601": "2022-03-10T22:36:23.652206Z",
        "url": "https://files.pythonhosted.org/packages/c7/b4/59e4159d364029c30ca93a33d8d7fb902158241cba95eb0737a3cdb2b916/shot-scraper-0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5": [
      {
        "comment_text": "",
        "digests": {
          "md5": "997933eed44bf0c203ac5d3a06aa4149",
          "sha256": "20e68b766793a7d33f8bac4d80095af264189977a3f5baa21809fc44f52ee598"
        },
        "downloads": -1,
        "filename": "shot_scraper-0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "997933eed44bf0c203ac5d3a06aa4149",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 11612,
        "upload_time": "2022-03-12T19:19:05",
        "upload_time_iso_8601": "2022-03-12T19:19:05.274084Z",
        "url": "https://files.pythonhosted.org/packages/02/af/4ae39903ab06bb2cc97c8138801d75940704fadff464faaed5c8f4d30312/shot_scraper-0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "10a2fb98d1185b1d4fc5584b807bd4a4",
          "sha256": "346c999ace0cbd241e41d4433ed9c008c2ed02ad5a7080a3d20523525469843b"
        },
        "downloads": -1,
        "filename": "shot-scraper-0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "10a2fb98d1185b1d4fc5584b807bd4a4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 11061,
        "upload_time": "2022-03-12T19:19:06",
        "upload_time_iso_8601": "2022-03-12T19:19:06.804928Z",
        "url": "https://files.pythonhosted.org/packages/c7/47/6f6d85f1ceded366e588d2bab458887efe5d2bdf22332b62c63b6534f9c8/shot-scraper-0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6": [
      {
        "comment_text": "",
        "digests": {
          "md5": "9b7fb01d51c2eb37e2d15158c6ca5d3f",
          "sha256": "f4d81e6ebaa68c2f41e9b02bd500535175951cbb82eae4b5867c6e09cf47d814"
        },
        "downloads": -1,
        "filename": "shot_scraper-0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9b7fb01d51c2eb37e2d15158c6ca5d3f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 13856,
        "upload_time": "2022-03-12T21:32:40",
        "upload_time_iso_8601": "2022-03-12T21:32:40.214758Z",
        "url": "https://files.pythonhosted.org/packages/0d/b8/e42dc7ce09c6b084cb57950e65e46e9876eefcdd03a5546a607e6ba49e75/shot_scraper-0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "34637727ec38c7de51e44fb2feacd10f",
          "sha256": "c3b2be4b97aa72a1fff877a73c884175497a7591e822f622be3aaddb386cf236"
        },
        "downloads": -1,
        "filename": "shot-scraper-0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "34637727ec38c7de51e44fb2feacd10f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 16885,
        "upload_time": "2022-03-12T21:32:41",
        "upload_time_iso_8601": "2022-03-12T21:32:41.251858Z",
        "url": "https://files.pythonhosted.org/packages/e9/8c/661e2b0e7ce03d354f8be2ae1d502db7e8b752ceb8fec7402e2d5f57ed4d/shot-scraper-0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7": [
      {
        "comment_text": "",
        "digests": {
          "md5": "49b8b8b91fd3656bbeede6d26037c8a1",
          "sha256": "43866d757e9aadb76d110f892af618e1876e83d642253e295103e301d6ac2a34"
        },
        "downloads": -1,
        "filename": "shot_scraper-0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "49b8b8b91fd3656bbeede6d26037c8a1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 15041,
        "upload_time": "2022-03-13T04:51:29",
        "upload_time_iso_8601": "2022-03-13T04:51:29.797037Z",
        "url": "https://files.pythonhosted.org/packages/68/c4/7f1e5db26d98d4c0f12d36ef862fe9cb13cb09a8f4108ca8e4e8d055c089/shot_scraper-0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "2e93ce3c44296d8f96ab7a8a82e5c00e",
          "sha256": "d0c7ad5bdec60066a8626351a141fc4d9e716dda99995baeb0aa0c1f8b145fbc"
        },
        "downloads": -1,
        "filename": "shot-scraper-0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "2e93ce3c44296d8f96ab7a8a82e5c00e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 18210,
        "upload_time": "2022-03-13T04:51:31",
        "upload_time_iso_8601": "2022-03-13T04:51:31.090214Z",
        "url": "https://files.pythonhosted.org/packages/e7/a6/5755af695a23e406f98e78437c0c29cdb07c72e906a355b05bfb62c506b7/shot-scraper-0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8": [
      {
        "comment_text": "",
        "digests": {
          "md5": "83eaba6cf9e3f8b8b8312adddc0765f7",
          "sha256": "921995ebee2fef379ec0a9081adf87bbe09ec7ce2b9af691c9fd1830b9c22188"
        },
        "downloads": -1,
        "filename": "shot_scraper-0.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "83eaba6cf9e3f8b8b8312adddc0765f7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 15433,
        "upload_time": "2022-03-13T17:07:28",
        "upload_time_iso_8601": "2022-03-13T17:07:28.922371Z",
        "url": "https://files.pythonhosted.org/packages/2f/49/b701c4938717b2aa8dcd63f549d32c32e585242d7494a7be947d8f7246b1/shot_scraper-0.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "813719297f97433be306dda7f7dfd186",
          "sha256": "984b751b9ce9851a0d3d0969b0acd479daaf3b229f446c861a1e12e6f469cc77"
        },
        "downloads": -1,
        "filename": "shot-scraper-0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "813719297f97433be306dda7f7dfd186",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 18681,
        "upload_time": "2022-03-13T17:07:30",
        "upload_time_iso_8601": "2022-03-13T17:07:30.342374Z",
        "url": "https://files.pythonhosted.org/packages/00/ff/ad107e0b03f107304739a3deb4a2d4485cd6ed702a8a86f089ba7f9850f4/shot-scraper-0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9": [
      {
        "comment_text": "",
        "digests": {
          "md5": "14e1c795b36a5ba0679349c0368bc3f6",
          "sha256": "dee720966869fefea2fd652633a444d73161e52ba4d38445f05433cd32b761aa"
        },
        "downloads": -1,
        "filename": "shot_scraper-0.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "14e1c795b36a5ba0679349c0368bc3f6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 16667,
        "upload_time": "2022-03-14T00:08:22",
        "upload_time_iso_8601": "2022-03-14T00:08:22.347956Z",
        "url": "https://files.pythonhosted.org/packages/ba/ae/84bfaf6b733dfb74851e5a2f54ecdf0c6d097bbdb8e7ce63be88b70287dd/shot_scraper-0.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "md5": "a2b2cca2b7ab4f687f9fff393a712d7a",
          "sha256": "1bf9be11dac35c3cbeac404f80f01dbbabcfa4eb488cbf7ebd9963eaf4a5ff3e"
        },
        "downloads": -1,
        "filename": "shot-scraper-0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "a2b2cca2b7ab4f687f9fff393a712d7a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 20476,
        "upload_time": "2022-03-14T00:08:23",
        "upload_time_iso_8601": "2022-03-14T00:08:23.908592Z",
        "url": "https://files.pythonhosted.org/packages/c5/10/104f7c88f8f087ea5bb9dfe0b4e96cf575827a2bf5aee2b66e6a08a43521/shot-scraper-0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "md5": "5f0bacb2133101362e74bbeb9140d364",
        "sha256": "84bb16065b4f954f366d939183680b92b81f9140be28a0df2000895c0b9d4d0f"
      },
      "downloads": -1,
      "filename": "shot_scraper-0.11-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5f0bacb2133101362e74bbeb9140d364",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 18049,
      "upload_time": "2022-04-08T20:11:49",
      "upload_time_iso_8601": "2022-04-08T20:11:49.823389Z",
      "url": "https://files.pythonhosted.org/packages/8a/0a/25bd6e00705e8bca4e02402dba93f43424194953daed48e1c43bfb03a360/shot_scraper-0.11-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "md5": "a0fe09add448524867e4c2f30f22abcd",
        "sha256": "01692606b2ee205745f2974d7a4121700797eed60e8d48722f88ab6a1910b058"
      },
      "downloads": -1,
      "filename": "shot-scraper-0.11.tar.gz",
      "has_sig": false,
      "md5_digest": "a0fe09add448524867e4c2f30f22abcd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 22719,
      "upload_time": "2022-04-08T20:11:51",
      "upload_time_iso_8601": "2022-04-08T20:11:51.171275Z",
      "url": "https://files.pythonhosted.org/packages/68/9c/565273ca03f789294e6efc7f298a73f381d430feb6518d4e8e747f2e4e38/shot-scraper-0.11.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}
